[package]
name = "beet_router"
version.workspace = true
edition.workspace = true
license.workspace = true
authors.workspace = true
readme.workspace = true
description = "File based router for websites"
documentation.workspace = true
homepage.workspace = true
repository.workspace = true
categories.workspace = true
keywords.workspace = true

[features]
default = ["serde", "markdown", "actions"]
build = ["serde", "parser"]
actions = ["serde", "sweet/net", "dep:once_cell"]
markdown = ["parser", "dep:pulldown-cmark"]
axum = ["dep:axum", "dep:tower", "dep:http-body-util"]
serde = ["dep:serde", "dep:serde_json", "dep:ron", "dep:toml", "beet_rsx/serde"]
parser = [
	"serde",
	"sweet/fs",
	"beet_rsx/parser",
	"dep:uuid",
	"dep:quote",
	"dep:proc-macro2",
	"dep:prettyplease",
	"dep:syn",
]
bevy = ["beet_rsx/bevy", "dep:bevy", "dep:flume", "dep:tokio"]
# adds the test_site mod for internal testing
_test_site = []


[dependencies]
beet_rsx = { workspace = true }

anyhow.workspace = true
thiserror.workspace = true
rapidhash.workspace = true
http.workspace = true
futures.workspace = true
clap.workspace = true
sweet.workspace = true

once_cell = { workspace = true, optional = true }

#ðŸ’¡ serde
serde = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
ron = { workspace = true, optional = true }
toml = { workspace = true, optional = true }
heck.workspace = true

#ðŸ’¡ parser
uuid = { version = "1", features = ["v4"], optional = true }
quote = { workspace = true, optional = true }
proc-macro2 = { workspace = true, optional = true }
prettyplease = { workspace = true, optional = true }
syn = { workspace = true, optional = true }
pulldown-cmark = { version = "0.13", optional = true }

#ðŸ’¡ bevy
bevy = { workspace = true, optional = true }
flume = { workspace = true, optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
axum = { workspace = true, optional = true }
tower = { workspace = true, optional = true }
http-body-util = { workspace = true, optional = true }
tokio = { workspace = true, optional = true }

[dev-dependencies]
sweet = { workspace = true, features = ["test"] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
# beet_router = { path = "", features = ["parser", "bevy"] }
beet_router = { path = "", features = [
	"axum",
	"parser",
	"bevy",
	"build",
	# "_test_site",
] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
web-sys.workspace = true
console_error_panic_hook.workspace = true
